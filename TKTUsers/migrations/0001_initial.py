# Generated by Django 4.2.1 on 2023-05-06 08:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Agent_name', models.TextField()),
                ('Agent_created_date', models.DateField(auto_now_add=True, null=True)),
                ('Agent_status', models.CharField(choices=[('Active', 'ACTIVE'), ('Deactivated', 'DEACTIVATED')], max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Agent_name',
            },
        ),
        migrations.CreateModel(
            name='Agent_Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Agent_Role_name', models.CharField(max_length=500)),
                ('Agent_Role_created_date', models.DateField(auto_now_add=True)),
                ('Agent_Role_update_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Agent_Role_name',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category_title', models.CharField(max_length=500)),
                ('Category_created_date', models.DateField(auto_now_add=True)),
                ('Category_update_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Category Title',
            },
        ),
        migrations.CreateModel(
            name='Issue_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Issue_Category_name', models.CharField(max_length=500)),
                ('Issue_Category_created_date', models.DateField(auto_now_add=True)),
                ('Issue_Category_update_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Issue Category Name',
            },
        ),
        migrations.CreateModel(
            name='technology_stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technology_name', models.CharField(max_length=500)),
                ('technology_stack_created_date', models.DateField(auto_now_add=True)),
                ('technology_stack_update_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Technology Name',
            },
        ),
        migrations.CreateModel(
            name='Ticket_status_choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(max_length=100)),
                ('Ticket_status_created_date', models.DateField(auto_now_add=True)),
                ('Ticket_status_update_date', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ticket Status Choice',
            },
        ),
        migrations.CreateModel(
            name='TicketDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('websitename', models.TextField()),
                ('websiteurl', models.TextField()),
                ('website_description', models.TextField()),
                ('Issue_Related_To', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.issue_category')),
                ('website_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.category')),
                ('website_technology', models.ManyToManyField(related_name='website_technology', to='TKTUsers.technology_stack')),
            ],
            options={
                'verbose_name_plural': 'Ticket For websiteurl',
            },
        ),
        migrations.CreateModel(
            name='Ticket_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_remark', models.TextField()),
                ('ticket_raised_date', models.DateField(auto_now_add=True, null=True)),
                ('ticket_last_updated_date', models.DateField(auto_now=True, null=True)),
                ('ticket_assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.agent')),
                ('ticket_raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.ticket_status_choice')),
                ('ticket_token_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.ticketdetail')),
            ],
            options={
                'verbose_name_plural': 'ticket_token_idticket_raised_by',
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='Agent_expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.technology_stack'),
        ),
        migrations.AddField(
            model_name='agent',
            name='Agent_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TKTUsers.agent_role'),
        ),
        migrations.AddField(
            model_name='agent',
            name='Agent_technology_expert',
            field=models.ManyToManyField(related_name='Agent_technology_expert', to='TKTUsers.technology_stack'),
        ),
    ]
